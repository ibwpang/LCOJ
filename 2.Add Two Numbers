/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;       //value of this node
 *     ListNode next; // pointer to the next node, recursively create next new node
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        //ListNode head = new ListNode(0);
        //ListNode node = new ListNode(0);
        ListNode head, node;
        head = node = new ListNode(0);  //head and node must be refer to the same object
        int carry = 0;
        int remainder = 0;
        int sum = 0;
        while(l1!=null||l2!=null||carry!=0){
            sum = (l1==null?0:l1.val)+(l2==null?0:l2.val)+carry;
            remainder=sum%10;
            carry=sum/10;
            //node = new ListNode(remainder);
            //node.next = new ListNode(remainder);
            node = node.next = new ListNode(remainder); //update the node to another new node, ie.node.next
            l1=(l1!=null?l1.next:null);
            l2=(l2!=null?l2.next:null);
        }
        return head.next; //recursively get the next and the next'next digits.
    }
}
