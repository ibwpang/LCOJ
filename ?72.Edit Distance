//-------DP----beats 97% java solution--------
public class Solution { 
    public int minDistance(String word1, String word2) {
        int m = word1.length(), n = word2.length();
        char[] w1 = word1.toCharArray();
        char[] w2 = word2.toCharArray();
        int[] cur = new int[m+1];
        for (int i = 1; i <= m; i++)
            cur[i] = i;
        for (int j = 1; j <= n; j++) {
            int pre = cur[0];
            cur[0] = j;
            for (int i = 1; i <= m; i++) {
                int temp = cur[i];
                if (w1[i - 1] == w2[j - 1])
                    cur[i] = pre;
                else cur[i] = (pre + 1) < ((cur[i] + 1)<(cur[i - 1] + 1)?(cur[i] + 1):(cur[i - 1] + 1)) ? (pre+1) : ((cur[i] + 1)<(cur[i - 1] + 1)?(cur[i] + 1):(cur[i - 1] + 1));
                pre = temp;
            }
        }
        return cur[m]; 
    }
}
