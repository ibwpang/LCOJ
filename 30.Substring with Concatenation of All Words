//Successful but Time limit exceeded
public class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> res = new ArrayList<Integer>();
        if(s.length()==0||words.length==0||s==null||words==null){
            return res;
        }
        int len = words[0].length();
        Map<String, Integer> map = new HashMap<String, Integer>();
        for(String w:words){
            map.put(w, map.containsKey(w)?(map.get(w)+1):1);
        }
        for(int i=0; i<=s.length()-len*words.length; i++){ //It means if the lefted (unchecked) s substring is shorter than the words string (in terms of the total number of the ch in string), it is unnecessary to check the lefted (unchecked) s substring.
            Map<String, Integer> copy = new HashMap<String,Integer>(map);
            for(int j=0; j<words.length;j++){  
                String str = s.substring(i+j*len, i+j*len+len);
                if(copy.containsKey(str)){   //check the first match small string. Only when the first small string matched (ie.there is a small string int the hashmap same as the substring of s), this j loop can be executed. Otherwise it will go back to i loop directly.
                    int count = copy.get(str);
                    if(count==1){
                        copy.remove(str);
                    }
                    else{
                        copy.put(str,count-1);
                    }
                    if(copy.isEmpty()){
                        res.add(i);
                        //break;
                    }
                }
                else{
                    //break;
                }
            }
        }
        return res;
    }
}
