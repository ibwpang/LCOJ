public class Solution {
    public void solveSudoku(char[][] board) {
        if(board.length==0||board==null){
            return;
        }
        solve(board);
    }
    
    public boolean solve(char[][] board){
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[i].length;j++){
                if(board[i][j]=='.'){
                    for(char c='1';c<='9';c++){
                        if(isValid(board,i,j,c)){
                            board[i][j]=c;
                        
                            if(solve(board)){
                                return true;
                            }
                            else{
                                board[i][j]='.';
                            }
                        }    
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
    public boolean isValid(char[][] board, int row, int col, char c){//just check this cell is valid or not, it is different with checking whether the whole board is valid or not.
        for(int i=0;i<board.length;i++){ //just check the row, col, cube in which the cell(row,col) located.
            if(board[row][i]!='.'&&board[row][i]==c){
                return false;
            }
            if(board[i][col]!='.'&&board[i][col]==c){
                return false;
            }
            if(board[3*(row/3)+i/3][3*(col/3)+i%3]!='.'&&board[3*(row/3)+i/3][3*(col/3)+i%3]==c){
                return false;
            }
        }
        return true;
    }
}
