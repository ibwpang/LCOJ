public class Solution {
    public boolean isPalindrome(int x) {
        String xstr= x+"";
        int len = xstr.length();
        if(len==0){
            return false;
        }
        else{
            if(len%2==0){   //even length
                int i=(len-1)/2; 
                int j=(len-1)/2+1;
                while(i>=0&&j<=len-1){
                    if(xstr.charAt(i)==xstr.charAt(j)){
                        i--;
                        j++;
                    }
                    else{
                        return false;
                    }
                }
            }
            else if(len%2==1){   //odd length
                int i=(len-1)/2;
                int j=(len-1)/2;
                while(i>=0&&j<=len-1){
                    if(xstr.charAt(i)==xstr.charAt(j)){
                        i--;
                        j++;
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        return true;
    }
}


//using the method of reversing the int x, you need to consider the overflow, because the reverse of the int x may overflow. But the code below don't need, because it just compare half of the int x
public boolean isPalindrome(int x) {
    if (x<0 || (x!=0 && x%10==0)) return false;
    int rev = 0;
    while (x>rev){
    	rev = rev*10 + x%10;
    	x = x/10;
    }
    return (x==rev || x==rev/10); // the notion is that i don't care whether it is parlindrome, I reverse half of the x firstly, and then I compare the first half and the reversed second half.
}
