/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //pre-order test cases: [4,2,6,7,3,5,1],[0,1]
public class Solution {
    
    public void recoverTree(TreeNode root) {
        if(root==null){
            return;
        }
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode pre = null;
        TreeNode firstNode = null;
        TreeNode secondNode = null;
        while(root!=null||!stack.isEmpty()){
            while(root!=null){
                stack.push(root);
                root = root.left;
            }
            root = stack.pop();
            if(pre!=null&&root.val<=pre.val){
                if(firstNode==null){
                    firstNode = pre;
                }
                if(firstNode!=null){
                    secondNode = root;
                }
            }
            pre = root;
            root = root.right;
        }
        int temp = firstNode.val;
        firstNode.val = secondNode.val;
        secondNode.val = temp;
        return;
    }
}
