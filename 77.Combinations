//Backtracking-(DFS)
public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        if(n==0||k==0){
            return res;
        }
        backtrack(res, new ArrayList<Integer>(), n, k, 1);
        return res;
    }
    
    public void backtrack(List<List<Integer>> res, ArrayList<Integer> templist, int n, int k, int start){
        if(templist.size()==k){
            res.add(new ArrayList<Integer>(templist));
            return;
        }
        for(int i=start;i<=n;i++){
            templist.add(i);
            backtrack(res, templist, n, k, i+1);
            templist.remove(templist.size()-1);
        }
        return;
    }
}
